/*!
 * liberationbarbellclub
 * Liberation Barbell Club
 * https://github.com/maxkirchoff/liberationbarbellclub.com
 * @author Max Kirchoff
 * @version 1.0.0
 * Copyright 2019. MIT licensed.
 */
@import url("https://use.typekit.net/ijc1aoj.css");@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}body{font-family:itc-avant-garde-gothic-pro,sans-serif;font-size:6.5vw;font-weight:300;line-height:1.5;color:#111;background:#111}@media only screen and (min-width:768px){body{font-size:2vw}}body,html{min-height:100vh}input:-ms-input-placeholder{color:#000;opacity:1}input::placeholder{color:#000;opacity:1}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.site-container p{font-size:5vw}@media only screen and (min-width:768px){.site-container p{font-size:3vw}}@media only screen and (min-width:1024px){.site-container p{font-size:1.8vw}}.site-container .button,.site-container input{text-align:center;padding:4vw;text-transform:uppercase;background:#fff;border:2px solid #ff6a31;display:block;width:100%;color:#34cfff;border-radius:0;font-size:6vw}@media only screen and (min-width:768px){.site-container .button,.site-container input{font-size:3vw;padding:1vw 2vw}}@media only screen and (min-width:1024px){.site-container .button,.site-container input{font-size:1.8vw}}.site-container .button.button,.site-container .button[type=submit],.site-container input.button,.site-container input[type=submit]{background:#ff6a31;color:#000;font-weight:500;cursor:pointer;text-decoration:none}.site-container img{max-width:100%;width:100%}.site-container section{position:relative;margin:10vw 12.5% 0;width:75%}@media only screen and (min-width:1024px){.site-container section{margin:5vw 12.5% 0}}.site-container section .logo{background-color:#111;width:100%;margin:0;padding:15vh 0}@media only screen and (min-width:768px){.site-container section .logo{margin:8vw auto 0;width:40%;padding:0}}.site-container section .logo img{display:block;margin:0 auto}@media only screen and (min-width:768px){.site-container section .logo img{width:100%;margin-top:-2%}}.site-container section.video{position:relative;margin:10vw 12.5% 0;width:75%;height:0;padding-bottom:42.1875%}.site-container section.video iframe{position:absolute;top:0;left:0;width:100%;height:100%}.site-container section.founding-membership{color:#fff}.site-container section.founding-membership>h1{font-size:8vw;color:#fff;font-weight:500;margin-bottom:0}@media only screen and (min-width:768px){.site-container section.founding-membership>h1{font-size:5vw;margin-top:0}}.site-container section.founding-membership p{margin:3vw 0 0}@media only screen and (min-width:1024px){.site-container section.founding-membership .row{display:-ms-flexbox;display:flex;-ms-flex-direction:row-reverse;flex-direction:row-reverse;margin-top:3vw}}.site-container section.founding-membership .row .photos{margin-bottom:15vw}@media only screen and (min-width:1024px){.site-container section.founding-membership .row .photos{width:47.5%;margin-bottom:0}}.site-container section.founding-membership .row .photos .photo{margin:10vw 0}@media only screen and (min-width:1024px){.site-container section.founding-membership .row .photos .photo{margin:0 0 5vw}}@media only screen and (min-width:1024px){.site-container section.founding-membership .row .text{width:47.5%;margin-left:5%}}.site-container section.founding-membership .row .text h2{line-height:1;color:#34cfff;margin:3vw 0 0;font-size:5vw}@media only screen and (min-width:768px){.site-container section.founding-membership .row .text h2{font-size:3vw}}@media only screen and (min-width:1024px){.site-container section.founding-membership .row .text h2{margin-top:0}}.site-container section.founding-membership .row .button{margin:10vw 0 20vw}@media only screen and (min-width:768px){.site-container section.founding-membership .row .button{margin:5vw 0 10vw}}.site-container section.email-signup{background:#fff;width:100%;margin:0 auto;padding:0 12.5%}@media only screen and (min-width:768px){.site-container section.email-signup{width:100%}}@media only screen and (min-width:1024px){.site-container section.email-signup{display:-ms-flexbox;display:flex;-ms-flex-direction:row-reverse;flex-direction:row-reverse}}.site-container section.email-signup p{margin:0;padding-top:15vw}@media only screen and (min-width:768px){.site-container section.email-signup p{width:80%;margin:0 auto;text-align:center;padding-top:8vw}}@media only screen and (min-width:1024px){.site-container section.email-signup p{width:45%;text-align:left;padding:10vw 0;margin-top:-.5%}}@media only screen and (min-width:1024px){.site-container section.email-signup #mc_embed_signup{width:45%;margin-right:10%}}.site-container section.email-signup form{font-size:5vw;padding:15vw 0}@media only screen and (min-width:768px){.site-container section.email-signup form{font-size:1.5vw;width:80%;margin:0 auto;padding:5vw 0 10vw}}@media only screen and (min-width:1024px){.site-container section.email-signup form{padding:10vw 0}}@media only screen and (min-width:768px){.site-container section.email-signup form.button,.site-container section.email-signup form[type=submit]{width:25%}}.site-container section.swag{margin:0;padding:10vw 5%;width:100%;background:#fff}@media only screen and (min-width:1024px){.site-container section.swag{padding:5vw 5% 0}}@media only screen and (min-width:1500px){.site-container section.swag{padding:5vw 12.5% 0}}.site-container section.swag h1{font-size:10vw;text-align:center;font-weight:500;margin-bottom:15vw}@media only screen and (min-width:1024px){.site-container section.swag h1{font-size:6.25vw;margin-bottom:5vw}}@media only screen and (min-width:1024px){.site-container section.swag .row{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}}.site-container section.swag .row .product{width:80%;margin:10vw auto 15vw;text-align:center}@media only screen and (min-width:1024px){.site-container section.swag .row .product{width:30%;margin:0 auto 10vw}}.site-container section.swag .row .product h3{margin:0}.site-container section.swag .row .product .button{margin-top:5vw}@media only screen and (min-width:1024px){.site-container section.swag .row .product .button{width:60%;margin:5vw auto 0}}.site-container section.patterns{height:30vh;width:100%;margin:0;padding-top:15vw;background-image:url(/assets/img/pattern-blue.png);background-size:55%}@media only screen and (min-width:768px){.site-container section.patterns{background-size:30%;height:20vw}}footer{background:#fff;color:#111;font-size:3vw;text-align:center;padding:2vw}@media only screen and (min-width:768px){footer{font-size:1.5vw}}.header{top:20px;z-index:1;position:absolute;left:0;right:0}.header .logo{display:block;float:left;width:30px}.header .logo img{width:100%;height:auto}.header nav{display:block;width:70%;float:right;margin-top:20px}@media only screen and (min-width:1024px){.header nav{margin-top:10px}}.header nav button.menu-toggle{color:#000;display:block;position:absolute;padding:0 0 10px 20px;text-transform:uppercase;right:0;top:0;z-index:2;outline:none;background:none;cursor:pointer;border:0}@media only screen and (min-width:1024px){.header nav button.menu-toggle{display:none}}.header nav button.menu-toggle.menu-active{color:#fff}.header nav ul{display:none;list-style:none;line-height:1;margin:0;padding:50px 8.33% 0;position:fixed;background:#ff6a31;top:0;bottom:0;left:0;right:0}@media only screen and (min-width:1024px){.header nav ul{padding:0;display:block;margin-left:3vw;float:left;position:relative;top:auto;left:auto;right:auto;bottom:auto;background:transparent;width:100%}}@media only screen and (min-width:1280px){.header nav ul{margin-left:35px}}.header nav ul.active{display:block;overflow:auto}.header nav ul li{display:block;margin:6vh 0}@media only screen and (min-width:1024px){.header nav ul li{vertical-align:top;margin:5px 1.3vw;display:block;float:right}}@media only screen and (min-width:1280px){.header nav ul li{margin:10px 28px}}.header nav ul li a{text-decoration:none;text-transform:uppercase;font-weight:700;font-size:7vw;color:#fff}@media only screen and (min-width:1024px){.header nav ul li a{font-size:1vw;color:#000}}@media only screen and (min-width:1280px){.header nav ul li a{font-size:14px}}.header nav ul li a.button{padding:10px;background:#ff6a31;color:#fff}@media only screen and (max-width:1023px){.header nav ul li a.button{padding:0;background:transparent}}@media only screen and (min-width:1024px){.header nav ul li a.active{border-bottom:2px solid #ff6a31}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
